{"ast":null,"code":"(function (root, globalName, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD:\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node:\n    module.exports = factory(); // Use module export as simulated ES6 default export:\n\n    module.exports.default = module.exports;\n  } else {\n    // Browser:\n    window[globalName] = factory();\n  }\n})(this, 'b64toBlob', function () {\n  'use strict';\n\n  return function b64toBlob(b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      var slice = byteCharacters.slice(offset, offset + sliceSize);\n      var byteNumbers = new Array(slice.length);\n\n      for (var i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      var byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, {\n      type: contentType\n    });\n    return blob;\n  };\n});","map":null,"metadata":{},"sourceType":"script"}