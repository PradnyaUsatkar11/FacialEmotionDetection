{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/pradnya/projects/FacialEmotionDetection/FacialEmotionDetection/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/pradnya/projects/FacialEmotionDetection/FacialEmotionDetection/src/App.js\";\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    width: 90px;\\n    height: 90px;\\n    border-radius: 50%;\\n    background-color: red;\\n    bottom: 8%;\\n    z-index: 10;\\n  \"]);\n\n  _templateObject8 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    display: flex;\\n    justify-content: center;\\n    width: 100%;\\n    bottom: 20px;\\n  \"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 100%;\\n    background-image: url(\\\"\", \"\\\");\\n    background-position: center;\\n    background-size: cover;\\n  \"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    & > span {\\n      color: white;\\n      font-size: 72px;\\n    }\\n  \"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    width: 120px;\\n    height: 120px;\\n    border-radius: 50%;\\n    background-color: #f8e71c;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    z-index: 10;\\n    & > p {\\n      font-size: 14px;\\n      text-align: center;\\n      line-height: 1.3em;\\n    }\\n  \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: calc(\", \" - 3px);\\n    left: calc(\", \" - 3px);\\n    width:  calc(100% - \", \" * 2 - 4px);\\n    height: calc(100% - \", \" * 2 - 4px);\\n    border: 6px solid #ddd8e6;\\n    border-radius: 10px\\n    box-shadow: 0px 0px 0px 9999px rgba(0,0,0,0.5);\\n\\n  \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    min-width: 100%;\\n    min-height: 100%;\\n    object-fit: cover;\\n    object-position: 50% 50%;\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    width: 100vw;\\n    height: 100vh;\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Webcam from \"react-webcam\";\nimport styled from 'styled-components';\nimport './style.css';\nimport { Rectangle } from 'draw-shape-reactjs';\nconst camera = \"environment\";\n\nconst request = require('request-promise');\n\nconst width = \"15%\";\nconst height = \"10%\";\nconst Styled = {\n  Root: styled.div(_templateObject()),\n  Webcam: styled(Webcam)(_templateObject2()),\n  Border: styled.div(_templateObject3(), () => height, () => width, () => width, () => height),\n  Comments: styled.div(_templateObject4()),\n  Countdown: styled.div(_templateObject5()),\n  Confirm: styled.div(_templateObject6(), ({\n    file\n  }) => file),\n  Center: styled.div(_templateObject7()),\n  Button: styled.div(_templateObject8())\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderWebcam = () => React.createElement(Styled.Webcam, {\n      audio: false,\n      screenshotWidth: 1080,\n      videoConstraints: {\n        facingMode: camera,\n        width: 1920,\n        height: 1080\n      },\n      ref: this.webcam,\n      screenshotFormat: \"image/jpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n\n    this.renderWaitingShot = () => React.createElement(React.Fragment, null, this.renderWebcam(), React.createElement(Styled.Center, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Styled.Button, {\n      onClick: this.handleTakePhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })));\n\n    this.renderCountdown = () => React.createElement(React.Fragment, null, this.renderWebcam(), React.createElement(Styled.Countdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.countdown)));\n\n    this.renderConfirmScreen = () => React.createElement(Styled.Confirm, {\n      file: this.state.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Styled.Comments, {\n      style: {\n        top: \"50%\",\n        left: \"7%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"this.state.emotion\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.state.emotion)));\n\n    this.handleTakePhoto = async () => {\n      this.timer = setInterval(() => {\n        if (this.state.countdown === 1) {\n          new Promise(async (resolve, reject) => {\n            this.setState({\n              file: this.webcam.current.getScreenshot()\n            }); //    let newImage=this.state.file.replace(/^data:image\\/[a-z]+;base64,/, \"\");\n\n            var options = {\n              'method': 'POST',\n              'url': 'http://34.93.166.145:8080/api/image/',\n              'headers': {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"image\": this.state.file\n              })\n            };\n\n            try {\n              let response = await request(options);\n              console.log(\"code..\", typeof response);\n\n              if (response) {\n                response = JSON.parse(response);\n                console.log(\"response.body[success][0].emotion\", response[\"success\"]);\n\n                if (response[\"success\"].length > 0 && response[\"success\"][0] && response[\"success\"][0].emotion) {\n                  console.log(\"response.body[success][0].emotion\", response[\"success\"][0].emotion);\n                  this.setState({\n                    emotion: \"Happy\"\n                  });\n                } else {\n                  this.setState({\n                    emotion: \"No face\"\n                  });\n                }\n              } else {\n                console.log(\"Some error occurred\");\n              }\n\n              resolve();\n            } catch (error) {\n              console.log(\"error in api call...\");\n              reject();\n            }\n          });\n        }\n\n        if (this.state.countdown > 1) {\n          this.setState({\n            countdown: this.state.countdown - 1\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            viewState: 2\n          });\n        }\n      }, 1000);\n      this.setState({\n        viewState: 1,\n        countdown: 3\n      });\n    };\n\n    this.handleReTakePhoto = () => {};\n\n    this.renderMainView = () => {\n      switch (this.state.viewState) {\n        case 0:\n          return this.renderWaitingShot();\n\n        case 1:\n          return this.renderCountdown();\n\n        case 2:\n          {\n            return this.renderConfirmScreen();\n          }\n      }\n    };\n\n    this.webcam = React.createRef();\n    this.state = {\n      viewState: 0,\n      countdown: 3,\n      emotion: undefined,\n      file: undefined,\n      // Angry: undefined,\n      // Disgusted: undefined,\n      // Happy: undefined,\n      // Sad: undefined,\n      // Neutral: undefined,\n      // Fearful: undefined,\n      // Surprised: undefined,\n      rectangle: undefined\n    };\n  }\n\n  render() {\n    return React.createElement(Styled.Root, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.renderMainView(), React.createElement(Styled.Border, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pradnya/projects/FacialEmotionDetection/FacialEmotionDetection/src/App.js"],"names":["React","Component","render","Webcam","styled","Rectangle","camera","request","require","width","height","Styled","Root","div","Border","Comments","Countdown","Confirm","file","Center","Button","App","constructor","props","renderWebcam","facingMode","webcam","renderWaitingShot","handleTakePhoto","renderCountdown","state","countdown","renderConfirmScreen","top","left","emotion","timer","setInterval","Promise","resolve","reject","setState","current","getScreenshot","options","body","JSON","stringify","response","console","log","parse","length","error","clearInterval","viewState","handleReTakePhoto","renderMainView","createRef","undefined","rectangle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Webcam from \"react-webcam\";\nimport styled from 'styled-components';\nimport './style.css';\nimport {\n  Rectangle\n} from 'draw-shape-reactjs';\nconst camera = \"environment\";\nconst request = require('request-promise');\n\n\nconst width = \"15%\";\nconst height = \"10%\";\n\nconst Styled = {\n  Root: styled.div`\n    position: relative;\n    width: 100vw;\n    height: 100vh;\n  `,\n  Webcam: styled(Webcam)`\n    position: absolute;\n    min-width: 100%;\n    min-height: 100%;\n    object-fit: cover;\n    object-position: 50% 50%;\n  `,\n  Border: styled.div`\n    position: absolute;\n    top: calc(${() => height} - 3px);\n    left: calc(${() => width} - 3px);\n    width:  calc(100% - ${() => width} * 2 - 4px);\n    height: calc(100% - ${() => height} * 2 - 4px);\n    border: 6px solid #ddd8e6;\n    border-radius: 10px\n    box-shadow: 0px 0px 0px 9999px rgba(0,0,0,0.5);\n\n  `,\n  Comments: styled.div`\n    position: absolute;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%;\n    background-color: #f8e71c;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 10;\n    & > p {\n      font-size: 14px;\n      text-align: center;\n      line-height: 1.3em;\n    }\n  `,\n  Countdown: styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > span {\n      color: white;\n      font-size: 72px;\n    }\n  `,\n  Confirm: styled.div`\n    width: 100%;\n    height: 100%;\n    background-image: url(\"${({ file }) => file}\");\n    background-position: center;\n    background-size: cover;\n  `,\n  Center: styled.div`\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    bottom: 20px;\n  `,\n  Button: styled.div`\n    position: relative;\n    width: 90px;\n    height: 90px;\n    border-radius: 50%;\n    background-color: red;\n    bottom: 8%;\n    z-index: 10;\n  `,\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      viewState: 0,\n      countdown: 3,\n      emotion: undefined,\n      file: undefined,\n      // Angry: undefined,\n      // Disgusted: undefined,\n      // Happy: undefined,\n      // Sad: undefined,\n      // Neutral: undefined,\n      // Fearful: undefined,\n      // Surprised: undefined,\n      rectangle: undefined,\n    };\n  }\n\n  renderWebcam = () => (\n    <Styled.Webcam audio={false} screenshotWidth={1080} videoConstraints={{ facingMode: camera, width: 1920, height: 1080 }} ref={this.webcam} screenshotFormat=\"image/jpeg\" />\n  )\n\n  renderWaitingShot = () => (\n    <>\n      {this.renderWebcam()}\n      <Styled.Center>\n        <Styled.Button onClick={this.handleTakePhoto} />\n      </Styled.Center>\n    </>\n  )\n\n  renderCountdown = () => (\n    <>\n      {this.renderWebcam()}\n      <Styled.Countdown>\n        <span>{this.state.countdown}</span>\n      </Styled.Countdown>\n    </>\n  )\n\n  renderConfirmScreen = () => (\n    <Styled.Confirm file={this.state.file}>\n      <Styled.Comments style={{ top: \"50%\", left: \"7%\" }}>\n        <p>this.state.emotion<br />{this.state.emotion}</p>\n      </Styled.Comments>\n      {/* <Styled.Comments style={{ top: \"7%\", right: \"3%\" }}>\n        <p>Sad<br />{this.state.Sad}</p>\n      </Styled.Comments> */}\n    </Styled.Confirm>\n  )\n\n  handleTakePhoto = async () => {\n    this.timer = setInterval(() => {\n      if (this.state.countdown === 1) {\n        new Promise(async (resolve, reject) => {\n          this.setState({ file: this.webcam.current.getScreenshot() });\n          //    let newImage=this.state.file.replace(/^data:image\\/[a-z]+;base64,/, \"\");\n          var options = {\n            'method': 'POST',\n            'url': 'http://34.93.166.145:8080/api/image/',\n            'headers': {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"image\": this.state.file })\n\n          };\n          try {\n            let response = await request(options);\n            console.log(\"code..\", typeof response)\n            if (response) {\n              response = JSON.parse(response)\n              console.log(\"response.body[success][0].emotion\", response[\"success\"])\n              if (response[\"success\"].length > 0 && response[\"success\"][0] && response[\"success\"][0].emotion) {\n                console.log(\"response.body[success][0].emotion\", response[\"success\"][0].emotion)\n                this.setState({ emotion: \"Happy\" })\n              }\n              else {\n                this.setState({ emotion: \"No face\" })\n              }\n            }\n            else {\n              console.log(\"Some error occurred\")\n            }\n            resolve();\n          }\n          catch (error) {\n            console.log(\"error in api call...\")\n            reject();\n          }\n        })\n      }\n      if (this.state.countdown > 1) {\n        this.setState({ countdown: this.state.countdown - 1 });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ viewState: 2 });\n      }\n    }, 1000);\n\n    this.setState({ viewState: 1, countdown: 3 });\n  }\n\n  handleReTakePhoto = () => {\n\n  }\n\n  renderMainView = () => {\n    switch (this.state.viewState) {\n      case 0:\n        return this.renderWaitingShot();\n      case 1:\n        return this.renderCountdown();\n      case 2:\n        {\n          return this.renderConfirmScreen();\n        }\n    }\n  }\n\n  render() {\n    return (\n      <Styled.Root>\n        {this.renderMainView()}\n        \n        <Styled.Border />\n      </Styled.Root>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}